/*! For license information please see bundle.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./src/ts/libs/intersectAction.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"intersectAction\": () => /* binding */ intersectAction\n/* harmony export */ });\n/**\r\n * author Rimane\r\n * license MIT\r\n * url https://github.com/rimanem18/intersectAction\r\n * \r\n * @param {NodeList|HTMLCollection|HTMLElement|jQueryObject} elements 交差を監視したい要素\r\n * @param {Function} callback  交差時に実行したい関数\r\n * @param {IntersectionObserver Options} observerOptions IntersectionObserver のオプション\r\n */\r\nfunction intersectAction(elements, callback, observerOptions) {\r\n\t'use strict';\r\n\t\r\n\r\n\t// 省略用\r\n\tconst forEach = Array.prototype.forEach;\r\n\tconst toString = Object.prototype.toString;\r\n\r\n\t// 型厳密チェック用\r\n\tfunction typeOf(obj) {\r\n\t\tif (window.jQuery !== undefined && obj instanceof jQuery) {\r\n\t\t\treturn 'jquery';\r\n\t\t} else {\r\n\t\t\treturn toString.call(obj).slice(8, -1).toLowerCase();\r\n\t\t}\r\n\t}\r\n\r\n\t// 引数の型を String 型で取得\r\n\tconst elementsType = typeOf(elements);\r\n\r\n\t// option が指定されていなければ初期値を設定\r\n\tif (observerOptions === undefined || observerOptions === null) {\r\n\t\tobserverOptions = {\r\n\t\t\troot: null,\r\n\t\t\trootMargin: '0px',\r\n\t\t\tthreshold: 0\r\n\t\t}\r\n\t}\r\n\r\n\t// observer をインスタンス化\r\n\tconst observer = new IntersectionObserver(doIntersect, observerOptions);\r\n\r\n\t// 要素を監視する\r\n\tif (elementsType === 'jquery') {\r\n\t\t// jQuery オブジェクトなら DOM に変換して監視\r\n\t\tconst doms = elements.get();\r\n\t\tforEach.call(doms, function (dom) {\r\n\t\t\tobserver.observe(dom);\r\n\t\t})\r\n\t} else if(elementsType === 'nodelist' || elementsType === 'htmlcollection') {\r\n\t\t// nodelist かhtmlcollection ならforEach で回して全部監視\r\n\t\tforEach.call(elements, function (element) {\r\n\t\t\tobserver.observe(element);\r\n\t\t});\r\n\t} else {\r\n\t\t// その他なら一つをそのまま監視\r\n\t\tobserver.observe(elements);\r\n\t}\r\n\tconsole.log(elementsType);\r\n\t\r\n\r\n\t/**\r\n\t * 交差したときに呼び出す関数\r\n\t * @param entries\r\n\t */\r\n\tfunction doIntersect(entries) {\r\n\r\n\t\tif (elementsType === 'jquery') {\r\n\t\t\t// jQuery オブジェクトが渡された場合は jQuery として振る舞う\r\n\t\t\tforEach.call(entries, function (entry) {\r\n\t\t\t\tcallback(jQuery(entry.target), entry.isIntersecting, observer);\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\t// そうでない場合は vanilla として複数回処理\r\n\t\t\tforEach.call(entries, function (entry) {\r\n\t\t\t\tcallback(entry.target, entry.isIntersecting, observer);\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n};\n\n//# sourceURL=webpack://portfolio/./src/ts/libs/intersectAction.js?")}},__webpack_module_cache__={};function __webpack_require__(e){if(__webpack_module_cache__[e])return __webpack_module_cache__[e].exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{eval("\r\nvar intersectAction = __webpack_require__(/*! ./libs/intersectAction */ \"./src/ts/libs/intersectAction.js\").intersectAction;\r\nvar d = document;\r\nvar animClass = [\r\n    '.clip-inset',\r\n    '.overlap-panels__bg-blue',\r\n    '.overlap-panels__img',\r\n    '.overlap-panels__contents',\r\n    '.overlap-panels__bg-blue--second',\r\n    '.overlap-panels__img--second',\r\n    '.overlap-panels__contents--second'\r\n];\r\nanimClass.forEach(function (anim) {\r\n    var elements = d.querySelectorAll(anim);\r\n    intersectAction(elements, function (element, isIntersectiong, observer) {\r\n        if (isIntersectiong) {\r\n            element.classList.add('fadeOn');\r\n            observer.unobserve(element);\r\n        }\r\n    }, null);\r\n});\r\n\n\n//# sourceURL=webpack://portfolio/./src/ts/index.ts?")})()})();